// <auto-generated />
using System;
using FilmZone.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilmZone.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250526163727_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FilmZone.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Animation"
                        });
                });

            modelBuilder.Entity("FilmZone.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Cover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("FilmZone.Models.MovieStreamingService", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("StreamingServiceId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "StreamingServiceId");

                    b.HasIndex("StreamingServiceId");

                    b.ToTable("MovieStreamingService");
                });

            modelBuilder.Entity("FilmZone.Models.StreamingService", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("MovieId");

                    b.ToTable("StreamingService");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Logo = "NetflixLogo",
                            Name = "Netflix"
                        },
                        new
                        {
                            id = 2,
                            Logo = "AmazonPrimeLogo",
                            Name = "Amazon Prime"
                        },
                        new
                        {
                            id = 3,
                            Logo = "DisneyPlusLogo",
                            Name = "Disney+"
                        },
                        new
                        {
                            id = 4,
                            Logo = "HuluLogo",
                            Name = "Hulu"
                        },
                        new
                        {
                            id = 5,
                            Logo = "HBOMaxLogo",
                            Name = "HBO Max"
                        },
                        new
                        {
                            id = 6,
                            Logo = "AppleTVPlusLogo",
                            Name = "Apple TV+"
                        },
                        new
                        {
                            id = 7,
                            Logo = "WatchItLogo",
                            Name = "WatchIt"
                        },
                        new
                        {
                            id = 8,
                            Logo = "ShahidLogo",
                            Name = "Shahid"
                        });
                });

            modelBuilder.Entity("FilmZone.Models.Movie", b =>
                {
                    b.HasOne("FilmZone.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FilmZone.Models.MovieStreamingService", b =>
                {
                    b.HasOne("FilmZone.Models.Movie", "movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmZone.Models.StreamingService", "streamingService")
                        .WithMany()
                        .HasForeignKey("StreamingServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("movie");

                    b.Navigation("streamingService");
                });

            modelBuilder.Entity("FilmZone.Models.StreamingService", b =>
                {
                    b.HasOne("FilmZone.Models.Movie", null)
                        .WithMany("streamingServices")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("FilmZone.Models.Movie", b =>
                {
                    b.Navigation("streamingServices");
                });
#pragma warning restore 612, 618
        }
    }
}
